<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: streams.proto

namespace Event_store\Client\Streams\ReadResp;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>event_store.client.streams.ReadResp.ReadEvent</code>
 */
class ReadEvent extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.event_store.client.streams.ReadResp.ReadEvent.RecordedEvent event = 1;</code>
     */
    protected $event = null;
    /**
     * Generated from protobuf field <code>.event_store.client.streams.ReadResp.ReadEvent.RecordedEvent link = 2;</code>
     */
    protected $link = null;
    protected $position;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Event_store\Client\Streams\ReadResp\ReadEvent\RecordedEvent $event
     *     @type \Event_store\Client\Streams\ReadResp\ReadEvent\RecordedEvent $link
     *     @type int|string $commit_position
     *     @type \Event_store\Client\PBEmpty $no_position
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Streams::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.event_store.client.streams.ReadResp.ReadEvent.RecordedEvent event = 1;</code>
     * @return \Event_store\Client\Streams\ReadResp\ReadEvent\RecordedEvent|null
     */
    public function getEvent()
    {
        return $this->event;
    }

    public function hasEvent()
    {
        return isset($this->event);
    }

    public function clearEvent()
    {
        unset($this->event);
    }

    /**
     * Generated from protobuf field <code>.event_store.client.streams.ReadResp.ReadEvent.RecordedEvent event = 1;</code>
     * @param \Event_store\Client\Streams\ReadResp\ReadEvent\RecordedEvent $var
     * @return $this
     */
    public function setEvent($var)
    {
        GPBUtil::checkMessage($var, \Event_store\Client\Streams\ReadResp\ReadEvent\RecordedEvent::class);
        $this->event = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.event_store.client.streams.ReadResp.ReadEvent.RecordedEvent link = 2;</code>
     * @return \Event_store\Client\Streams\ReadResp\ReadEvent\RecordedEvent|null
     */
    public function getLink()
    {
        return $this->link;
    }

    public function hasLink()
    {
        return isset($this->link);
    }

    public function clearLink()
    {
        unset($this->link);
    }

    /**
     * Generated from protobuf field <code>.event_store.client.streams.ReadResp.ReadEvent.RecordedEvent link = 2;</code>
     * @param \Event_store\Client\Streams\ReadResp\ReadEvent\RecordedEvent $var
     * @return $this
     */
    public function setLink($var)
    {
        GPBUtil::checkMessage($var, \Event_store\Client\Streams\ReadResp\ReadEvent\RecordedEvent::class);
        $this->link = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>uint64 commit_position = 3;</code>
     * @return int|string
     */
    public function getCommitPosition()
    {
        return $this->readOneof(3);
    }

    public function hasCommitPosition()
    {
        return $this->hasOneof(3);
    }

    /**
     * Generated from protobuf field <code>uint64 commit_position = 3;</code>
     * @param int|string $var
     * @return $this
     */
    public function setCommitPosition($var)
    {
        GPBUtil::checkUint64($var);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.event_store.client.Empty no_position = 4;</code>
     * @return \Event_store\Client\PBEmpty|null
     */
    public function getNoPosition()
    {
        return $this->readOneof(4);
    }

    public function hasNoPosition()
    {
        return $this->hasOneof(4);
    }

    /**
     * Generated from protobuf field <code>.event_store.client.Empty no_position = 4;</code>
     * @param \Event_store\Client\PBEmpty $var
     * @return $this
     */
    public function setNoPosition($var)
    {
        GPBUtil::checkMessage($var, \Event_store\Client\PBEmpty::class);
        $this->writeOneof(4, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getPosition()
    {
        return $this->whichOneof("position");
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(ReadEvent::class, \Event_store\Client\Streams\ReadResp_ReadEvent::class);

