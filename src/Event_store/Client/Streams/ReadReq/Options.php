<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: streams.proto

namespace Event_store\Client\Streams\ReadReq;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>event_store.client.streams.ReadReq.Options</code>
 */
class Options extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.event_store.client.streams.ReadReq.Options.ReadDirection read_direction = 3;</code>
     */
    protected $read_direction = 0;
    /**
     * Generated from protobuf field <code>bool resolve_links = 4;</code>
     */
    protected $resolve_links = false;
    /**
     * Generated from protobuf field <code>.event_store.client.streams.ReadReq.Options.UUIDOption uuid_option = 9;</code>
     */
    protected $uuid_option = null;
    /**
     * Generated from protobuf field <code>.event_store.client.streams.ReadReq.Options.ControlOption control_option = 10;</code>
     */
    protected $control_option = null;
    protected $stream_option;
    protected $count_option;
    protected $filter_option;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Event_store\Client\Streams\ReadReq\Options\StreamOptions $stream
     *     @type \Event_store\Client\Streams\ReadReq\Options\AllOptions $all
     *     @type int $read_direction
     *     @type bool $resolve_links
     *     @type int|string $count
     *     @type \Event_store\Client\Streams\ReadReq\Options\SubscriptionOptions $subscription
     *     @type \Event_store\Client\Streams\ReadReq\Options\FilterOptions $filter
     *     @type \Event_store\Client\PBEmpty $no_filter
     *     @type \Event_store\Client\Streams\ReadReq\Options\UUIDOption $uuid_option
     *     @type \Event_store\Client\Streams\ReadReq\Options\ControlOption $control_option
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Streams::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.event_store.client.streams.ReadReq.Options.StreamOptions stream = 1;</code>
     * @return \Event_store\Client\Streams\ReadReq\Options\StreamOptions|null
     */
    public function getStream()
    {
        return $this->readOneof(1);
    }

    public function hasStream()
    {
        return $this->hasOneof(1);
    }

    /**
     * Generated from protobuf field <code>.event_store.client.streams.ReadReq.Options.StreamOptions stream = 1;</code>
     * @param \Event_store\Client\Streams\ReadReq\Options\StreamOptions $var
     * @return $this
     */
    public function setStream($var)
    {
        GPBUtil::checkMessage($var, \Event_store\Client\Streams\ReadReq\Options\StreamOptions::class);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.event_store.client.streams.ReadReq.Options.AllOptions all = 2;</code>
     * @return \Event_store\Client\Streams\ReadReq\Options\AllOptions|null
     */
    public function getAll()
    {
        return $this->readOneof(2);
    }

    public function hasAll()
    {
        return $this->hasOneof(2);
    }

    /**
     * Generated from protobuf field <code>.event_store.client.streams.ReadReq.Options.AllOptions all = 2;</code>
     * @param \Event_store\Client\Streams\ReadReq\Options\AllOptions $var
     * @return $this
     */
    public function setAll($var)
    {
        GPBUtil::checkMessage($var, \Event_store\Client\Streams\ReadReq\Options\AllOptions::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.event_store.client.streams.ReadReq.Options.ReadDirection read_direction = 3;</code>
     * @return int
     */
    public function getReadDirection()
    {
        return $this->read_direction;
    }

    /**
     * Generated from protobuf field <code>.event_store.client.streams.ReadReq.Options.ReadDirection read_direction = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setReadDirection($var)
    {
        GPBUtil::checkEnum($var, \Event_store\Client\Streams\ReadReq\Options\ReadDirection::class);
        $this->read_direction = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>bool resolve_links = 4;</code>
     * @return bool
     */
    public function getResolveLinks()
    {
        return $this->resolve_links;
    }

    /**
     * Generated from protobuf field <code>bool resolve_links = 4;</code>
     * @param bool $var
     * @return $this
     */
    public function setResolveLinks($var)
    {
        GPBUtil::checkBool($var);
        $this->resolve_links = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>uint64 count = 5;</code>
     * @return int|string
     */
    public function getCount()
    {
        return $this->readOneof(5);
    }

    public function hasCount()
    {
        return $this->hasOneof(5);
    }

    /**
     * Generated from protobuf field <code>uint64 count = 5;</code>
     * @param int|string $var
     * @return $this
     */
    public function setCount($var)
    {
        GPBUtil::checkUint64($var);
        $this->writeOneof(5, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.event_store.client.streams.ReadReq.Options.SubscriptionOptions subscription = 6;</code>
     * @return \Event_store\Client\Streams\ReadReq\Options\SubscriptionOptions|null
     */
    public function getSubscription()
    {
        return $this->readOneof(6);
    }

    public function hasSubscription()
    {
        return $this->hasOneof(6);
    }

    /**
     * Generated from protobuf field <code>.event_store.client.streams.ReadReq.Options.SubscriptionOptions subscription = 6;</code>
     * @param \Event_store\Client\Streams\ReadReq\Options\SubscriptionOptions $var
     * @return $this
     */
    public function setSubscription($var)
    {
        GPBUtil::checkMessage($var, \Event_store\Client\Streams\ReadReq\Options\SubscriptionOptions::class);
        $this->writeOneof(6, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.event_store.client.streams.ReadReq.Options.FilterOptions filter = 7;</code>
     * @return \Event_store\Client\Streams\ReadReq\Options\FilterOptions|null
     */
    public function getFilter()
    {
        return $this->readOneof(7);
    }

    public function hasFilter()
    {
        return $this->hasOneof(7);
    }

    /**
     * Generated from protobuf field <code>.event_store.client.streams.ReadReq.Options.FilterOptions filter = 7;</code>
     * @param \Event_store\Client\Streams\ReadReq\Options\FilterOptions $var
     * @return $this
     */
    public function setFilter($var)
    {
        GPBUtil::checkMessage($var, \Event_store\Client\Streams\ReadReq\Options\FilterOptions::class);
        $this->writeOneof(7, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.event_store.client.Empty no_filter = 8;</code>
     * @return \Event_store\Client\PBEmpty|null
     */
    public function getNoFilter()
    {
        return $this->readOneof(8);
    }

    public function hasNoFilter()
    {
        return $this->hasOneof(8);
    }

    /**
     * Generated from protobuf field <code>.event_store.client.Empty no_filter = 8;</code>
     * @param \Event_store\Client\PBEmpty $var
     * @return $this
     */
    public function setNoFilter($var)
    {
        GPBUtil::checkMessage($var, \Event_store\Client\PBEmpty::class);
        $this->writeOneof(8, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.event_store.client.streams.ReadReq.Options.UUIDOption uuid_option = 9;</code>
     * @return \Event_store\Client\Streams\ReadReq\Options\UUIDOption|null
     */
    public function getUuidOption()
    {
        return $this->uuid_option;
    }

    public function hasUuidOption()
    {
        return isset($this->uuid_option);
    }

    public function clearUuidOption()
    {
        unset($this->uuid_option);
    }

    /**
     * Generated from protobuf field <code>.event_store.client.streams.ReadReq.Options.UUIDOption uuid_option = 9;</code>
     * @param \Event_store\Client\Streams\ReadReq\Options\UUIDOption $var
     * @return $this
     */
    public function setUuidOption($var)
    {
        GPBUtil::checkMessage($var, \Event_store\Client\Streams\ReadReq\Options\UUIDOption::class);
        $this->uuid_option = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.event_store.client.streams.ReadReq.Options.ControlOption control_option = 10;</code>
     * @return \Event_store\Client\Streams\ReadReq\Options\ControlOption|null
     */
    public function getControlOption()
    {
        return $this->control_option;
    }

    public function hasControlOption()
    {
        return isset($this->control_option);
    }

    public function clearControlOption()
    {
        unset($this->control_option);
    }

    /**
     * Generated from protobuf field <code>.event_store.client.streams.ReadReq.Options.ControlOption control_option = 10;</code>
     * @param \Event_store\Client\Streams\ReadReq\Options\ControlOption $var
     * @return $this
     */
    public function setControlOption($var)
    {
        GPBUtil::checkMessage($var, \Event_store\Client\Streams\ReadReq\Options\ControlOption::class);
        $this->control_option = $var;

        return $this;
    }

    /**
     * @return string
     */
    public function getStreamOption()
    {
        return $this->whichOneof("stream_option");
    }

    /**
     * @return string
     */
    public function getCountOption()
    {
        return $this->whichOneof("count_option");
    }

    /**
     * @return string
     */
    public function getFilterOption()
    {
        return $this->whichOneof("filter_option");
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Options::class, \Event_store\Client\Streams\ReadReq_Options::class);

