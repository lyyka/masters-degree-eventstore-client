<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: persistent.proto

namespace Event_store\Client\Persistent_subscriptions\ListReq;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>event_store.client.persistent_subscriptions.ListReq.StreamOption</code>
 */
class StreamOption extends \Google\Protobuf\Internal\Message
{
    protected $stream_option;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Event_store\Client\StreamIdentifier $stream
     *     @type \Event_store\Client\PBEmpty $all
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Persistent::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.event_store.client.StreamIdentifier stream = 1;</code>
     * @return \Event_store\Client\StreamIdentifier|null
     */
    public function getStream()
    {
        return $this->readOneof(1);
    }

    public function hasStream()
    {
        return $this->hasOneof(1);
    }

    /**
     * Generated from protobuf field <code>.event_store.client.StreamIdentifier stream = 1;</code>
     * @param \Event_store\Client\StreamIdentifier $var
     * @return $this
     */
    public function setStream($var)
    {
        GPBUtil::checkMessage($var, \Event_store\Client\StreamIdentifier::class);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.event_store.client.Empty all = 2;</code>
     * @return \Event_store\Client\PBEmpty|null
     */
    public function getAll()
    {
        return $this->readOneof(2);
    }

    public function hasAll()
    {
        return $this->hasOneof(2);
    }

    /**
     * Generated from protobuf field <code>.event_store.client.Empty all = 2;</code>
     * @param \Event_store\Client\PBEmpty $var
     * @return $this
     */
    public function setAll($var)
    {
        GPBUtil::checkMessage($var, \Event_store\Client\PBEmpty::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getStreamOption()
    {
        return $this->whichOneof("stream_option");
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(StreamOption::class, \Event_store\Client\Persistent_subscriptions\ListReq_StreamOption::class);

